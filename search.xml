<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CF1223F</title>
    <url>/2023/10/25/CF1223F/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1223/F">传送门</a></p>
<p>才发现这题在 NOI 前写过。。。<br>但那时还没完全理解。<br>离谱的是，CSP-S <a href="https://www.luogu.com.cn/problem/P9753?contestId=140859">T2</a>竟然完全照抄。。。</p>
<p>原题的思路是乱搞，用 swap 操作优化了时空复杂度</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;c=<span class="built_in">getchar</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 300005</span></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">set&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &gt; nex[N];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IT set<span class="string">&lt;pair&lt;int, int&gt;</span> &gt;::iterator</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> q=<span class="built_in">read</span>();</span><br><span class="line">	<span class="keyword">while</span>(q--)&#123;</span><br><span class="line">		<span class="type">int</span> n=<span class="built_in">read</span>();</span><br><span class="line">		a[n+<span class="number">1</span>]=a[n+<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)a[i]=<span class="built_in">read</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">2</span>;++i)nex[i].<span class="built_in">clear</span>();</span><br><span class="line">		ll ans=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==a[i+<span class="number">1</span>])&#123;</span><br><span class="line">				<span class="built_in">swap</span>(nex[i],nex[i+<span class="number">2</span>]);</span><br><span class="line">				nex[i].<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(a[i+<span class="number">2</span>],i+<span class="number">2</span>));</span><br><span class="line">				ans=ans+nex[i].<span class="built_in">size</span>();</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			IT it=nex[i+<span class="number">1</span>].<span class="built_in">lower_bound</span>(<span class="built_in">make_pair</span>(a[i],<span class="number">0</span>));</span><br><span class="line">			<span class="keyword">if</span>(it==nex[i+<span class="number">1</span>].<span class="built_in">end</span>()||(*it).first!=a[i]||(*it).second&gt;n)<span class="keyword">continue</span>;</span><br><span class="line">			<span class="type">int</span> to=(*it).second;</span><br><span class="line">			<span class="built_in">swap</span>(nex[i],nex[to+<span class="number">1</span>]);</span><br><span class="line">			nex[i].<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(a[to+<span class="number">1</span>],to+<span class="number">1</span>));</span><br><span class="line">			ans=ans+nex[i].<span class="built_in">size</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但在看到 CF 评论区老哥的讨论后，才发现这题有很强的性质：<br>首先是可以<a href="https://codeforces.com/contest/1240/submission/62025172">分治</a>实现，只要满足左栈和右栈相等即可，用 hash 判断，复杂度 O(nlogn)</p>
<p>然后再观察可得，只需满足 1-(l-1) 和 1-(r) 消完的栈相等即可，所以用  trie 树记录即可，时间复杂度 O(n) ，空间复杂度 O(n|S|)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 2000006</span></span><br><span class="line"><span class="type">int</span> tot,to[N][<span class="number">26</span>],cnt[N],fa[N],top,now;</span><br><span class="line"><span class="type">char</span> s[N],sta[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	cin&gt;&gt;(s+<span class="number">1</span>);</span><br><span class="line">	now=++tot;</span><br><span class="line">	cnt[tot]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(top&amp;&amp;sta[top]==s[i])&#123;</span><br><span class="line">			--top;</span><br><span class="line">			now=fa[now],++cnt[now];</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			sta[++top]=s[i];</span><br><span class="line">			<span class="keyword">if</span>(to[now][s[i]-<span class="string">&#x27;a&#x27;</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">				to[now][s[i]-<span class="string">&#x27;a&#x27;</span>]=++tot;</span><br><span class="line">				fa[tot]=now;</span><br><span class="line">			&#125;</span><br><span class="line">			now=to[now][s[i]-<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">			++cnt[now];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;++i)ans=ans+<span class="number">1ll</span>*cnt[i]*(cnt[i]<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>CF</tag>
      </tags>
  </entry>
  <entry>
    <title>CSP监考游记</title>
    <url>/2023/10/20/CSP%E7%9B%91%E8%80%83%E6%B8%B8%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day -1"></a>Day -1</h1><p>一个下午都在 803，说是要主考早点到，但到了也没啥事，还是等监考也来了才开始讲。算了，还好讲完来的及赶晚课。</p>
<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h1><p>下了一个 wsl，运行了一下查重软件，还不错。<br>晚上去南一楼布置考场，纯纯赛博黑奴，要放挡板，理线，测系统，啥都要检查一遍，不给个 1000 说不过去了。<br>去南五楼后还给了夜宵，汉堡+派，十分可口。甚至由于工作到 11 点，人溜光了，最后还剩好几个，我就顺了一袋子回去投喂室友了。</p>
<h1 id="Day-1-1"><a href="#Day-1-1" class="headerlink" title="Day 1"></a>Day 1</h1><p>上午出大锅。<br>首先由于我脑残，忘记运行 netsh 了，导致最后网络恢复时无法统一提交代码，最后只能一份份手动上传，也不知道选手有没有趁机搞小动作。<br>然后是代码校验程序出锅，没有预料到极域上传文件自带 ip，导致程序出错。。。最后只能手动校验。普及组我们考场 106 个人，检查代码就检查了 30 min+，差点饭都来不及吃。。。<br>普及组题倒是挺正常的。</p>
<p>有了上午的前车之鉴，下午就正常了许多。<br><a href="https://www.imagehub.cc/image/1g9t3R"><img src="https://s1.imagehub.cc/images/2023/10/26/IMG_20231021_092158.jpeg" alt="IMG_20231021_092158.jpeg"></a><br>一切正常，甚至中途我还去缺考考生座位坐了一会，看了几眼题：<br>T1 简单，T2 不咋会，T3 一眼大模拟直接跳，T4 一眼秒了，就是二分 + 贪心。<br>最后校验和查重也十分顺利，有趣的是这次还真被查出了一个作弊考生，就硬抄前面的代码，删几个空格，也太瞧不起查重软件了吧。</p>
<p>晚上去泛悦城的安记潮牛猛炫一顿，毕竟报销额度按最顶级 90 元来，更是有顶级大厨亲自服务，不吃白不吃。</p>
<p><a href="https://www.imagehub.cc/image/1gy1OJ"><img src="https://s1.imagehub.cc/images/2023/10/25/IMG_20231021_210808.jpeg" alt="IMG_20231021_210808.jpeg"></a></p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>CSP</tag>
      </tags>
  </entry>
  <entry>
    <title>CCPC QHD</title>
    <url>/2023/10/18/CCPC-QHD/</url>
    <content><![CDATA[<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h1><p>经历了空铁联运的折腾，在 9 个多小时后才到秦皇岛，入住贝壳酒店。酒店很破，房卡微弯，一不小心就会掰折。大床房很是宽敞，但水、泡面、纸巾等理应附赠的全都没有，90 块的酒店也就这样吧。<br>晚上去广顺兴，三人吃了240+，我一人就占100+。。。这就是AA制吗</p>
<p><a href="https://imgse.com/i/piFATLF"><img src="https://z1.ax1x.com/2023/10/20/piFATLF.jpg" alt="piFATLF.jpg"></a></p>
<p>晚上去酒店旁逛街，东大对面的烧烤摊属实惊到我了，露天烧烤，人声鼎沸，烟火气浓重，可惜没有第二个胃。</p>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h1><p>早上不是被闹钟叫醒的，而是阳光直射被亮瞎的。<br>到体育馆找到座位后就把咖啡一饮而尽，之后倒是没犯困。<br>开题，队友秒过 G，我又秒了 J，然后三人对着 A 硬试，也迅速过掉了。<br>之后就进入了喜闻乐见的坐牢环节。<br>首先是我犯大罪，跟榜开 D 后，第一眼就幻视为 CCPC 网络赛的 <a href="https://codeforces.com/gym/104651/problem/L">L</a>，然后死命想不出怎么优化掉一个 log。队友也被我带偏，苦思两小时无果。<br>然后队友想出了一个很正确的贪心做法，但我们不会证明，又不敢写，白白浪费了大好机会。最后还是他提出了一个性质，优化掉一个log，但因为临近结束，心如死灰，最后直接放弃了。<br>中间其实 F 已经想到要 DP 了，但没细想就又去帮忙调 D 了，实在可惜。<br>打铁收尾。<br><a href="https://imgse.com/i/piFEMwQ"><img src="https://z1.ax1x.com/2023/10/20/piFEMwQ.jpg" alt="piFEMwQ.jpg"></a></p>
<p>说实话，打铁从不在我们考虑之内，但这次也暴露了很多问题。</p>
<p>第一，可做题太少，板子及高级数据结构掌握不够，只能硬磕传统题。<br>第二，默契不够，沟通不够有效，互相代码不熟悉。<br>第三，不够强硬，不能坚持自己的想法，至少得完整证明。</p>
<p>之后尽量加训吧，再打铁就要退役了。。。</p>
<h1 id="Day-1-1"><a href="#Day-1-1" class="headerlink" title="Day 1"></a>Day 1</h1><p>早八好困，直接翘掉了，还好是电路理论：）</p>
]]></content>
      <categories>
        <category>游记</category>
      </categories>
      <tags>
        <tag>XCPC</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/10/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
